{
  "version": 3,
  "file": "contact.js",
  "sourceRoot": "../../../../extra/cloud/www.archieshepp.org",
  "sources": [
    "../../../martin/cloud/express.marionrampal/routes/contact.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "express = require('express')\nnodemailer = require('nodemailer')\nxoauth2 = require('xoauth2')\nfs = require('fs')\npath = require('path')\ncors = require('cors')\nvalidator = require('validator')\nlog = require('../helpers/logger').mainLogger\nVErr = require('verror')\nvasync = require('vasync')\n\n\n\n \n\n#  generator = xoauth2.createXOAuth2Generator(auth)\n\n  # listen for token updates (if refreshToken is set)\n  # you probably want to store these to a db (lets write them to a file\n#  generator.on( 'token', (token)->\n#    console.log('New token for %s: %s', token.user, token.accessToken);\n#    auth.accessToken = token.accessToken\n#    fs.writeFile( authFile, JSON.stringify(auth), (err)->\n#      if err\n#        console.log \"Could not save auth data after update: \" + err.code\n#    ) \n#  )\n  \n  \n#  console.log JSON.stringify(generator)\n    \ncorsOptions = null\nrouter = express.Router()\nauth = null\ncontactMail = null\n\ninit = (config, callback) ->   \n  corsOptions = \n    origin: config.contact.origin\n    optionsSuccessStatus: 200 # some legacy browsers (IE11, various SmartTVs) choke on 204\n\n  authFile = path.join(process.env.EXPRESS_ROOT, config.contact.mailerKeyFile)\n\n  contactMail = config.contact.mailTo\n\n  fs.readFile authFile, (err, data) ->\n    if(err) \n      callback(new VErr(err, \"Could not read auth data from %s\", authFile ) )\n    else \n      auth = JSON.parse(data + \"\")       \n      callback()\n    \n  \n#from POST contact form. \nhandleMessage = (req, res, next) ->\n\n  log = require('../helpers/logger').requestLogger(req)\n\n  smtpTrans = nodemailer.createTransport({\n    service: 'Gmail',\n    auth: auth\n    logger: log\n    debug: if process.env.DEBUG  then true else false\n  })  \n  emailFrom = req.body.emailFrom || \"\";\n  subject = req.body.subject || \"\";\n  content = req.body.content || \"\";\n  \n  if !validator.isEmail(emailFrom)\n    return res.status(400).json {txt: 'Email ' + emailFrom + ' invalide', status: 'fail'}\n\n  #Mail options \n  mailOpts = \n    from: emailFrom , #grab form data from the request body object\n    to: contactMail,\n    subject: subject,        \n    replyTo: emailFrom, #grab form data from the request body object\n    text: \"de: \" + emailFrom + \"\\n\\n\\n\" + content\n  \n\n\n  smtpTrans.sendMail(mailOpts, (error, response) ->\n    #Email not sent\n    if (error) \n      log.error new VErr(error, \"Could not connect to smtp server\")\n      res.status(400).json {txt: 'error: Could not connect to smtp server.' + error.message, status: 'fail'}\n    #Yay!! Email sent\n    else \n      log.info {mailOpts}, \"contact mail sent\"\n      res.json {status: 'success', txt: 'Email envoyé avec succès'}\n\n  )\n\n\ndoneInit = (err,result)->\n  if err\n    err = new VErr(err, \"Cannot initialize mailer!\")\n    log.error \n    throw err\n\n  else  \n    #set options response\n    router.options('/',cors(corsOptions))\n    #POST contact form. \n    router.post '/', cors(corsOptions), handleMessage\n  \n\nvasync.waterfall([require('../helpers/init').readConfig, init], doneInit )\n\nmodule.exports = router;\n"
  ]
}