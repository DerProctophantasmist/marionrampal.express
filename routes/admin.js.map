{
  "version": 3,
  "file": "admin.js",
  "sourceRoot": "..",
  "sources": [
    "routes/admin.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "express = require('express')\nrouter = express.Router()\nvasync = require('vasync')\nVErr = require('verror')\nexec = require('child_process').execFile;\nlog = require('../helpers/logger').mainLogger\n\n#hbs = require('hbs')\nprodDir = null\nfromDir = null\nrenderError = (err) -> {}\n\nfolder = (rootSource, subDir) ->\n    cleanup : (callback)-> \n        if prodDir == null then throw new VErr(\"config not loaded.\")\n        exec('rm', ['-rf', prodDir + '/' + subDir ], \n          (err,stdout, stderr) ->\n            callback(err, {stdout, stderr})\n        )\n    ,\n    sync : (callback) ->\n        if prodDir == null then throw new VErr(\"config not loaded.\")\n        exec('rsync', ['-a', rootSource + '/' + subDir + '/', prodDir + '/' + subDir ], \n          (err,stdout, stderr) ->\n            callback(err, {stdout, stderr})\n        )\n\ndone = (res, req, next) -> \n  ( err, results ) ->\n    if err\n      req.log.error(err, \"failed to commit changes\")\n      renderError new VErr(err, \"Failed to commit changes\")\n    else\n      res.render('ok', { \n        message: \"Data and images from \" + fromDir + \" have been saved to the website\"\n      })\n\n\nonInit= (_,config) ->\n  prodDir = config.prodPublicDir\n  fromDir = config.stagingPublicDir\n  if prodDir == null || fromDir == null then throw new VErr(\"config not loaded.\")\n  # GET home page. \n  router.get('/commit', (req, res, next) ->\n    renderError = (err) -> next(err)\n    req.log = require('../helpers/logger').requestLogger(req)\n\n    data = folder(fromDir, 'data')\n    images = folder(fromDir, 'images')\n    vasync.parallel(\n          'funcs': [\n            data.sync,\n            images.sync\n          ]\n        ,\n        done(res, req, next)\n    )\n    return\n  )\n\nrequire('../helpers/init').readConfig(onInit)\n\nmodule.exports = router"
  ]
}