{
  "version": 3,
  "file": "admin.js",
  "sourceRoot": "../../../../extra/cloud/www.archieshepp.org",
  "sources": [
    "../../../martin/cloud/express.marionrampal/routes/admin.coffee"
  ],
  "names": [],
  "mappings": ";AAAA;AAAA,MAAA,IAAA,EAAA,MAAA,EAAA,iBAAA,EAAA,OAAA,EAAA,WAAA,EAAA,UAAA,EAAA,WAAA,EAAA,QAAA,EAAA,SAAA,EAAA,IAAA,EAAA,OAAA,EAAA,QAAA,EAAA,MAAA,EAAA,UAAA,EAAA,EAAA,EAAA,GAAA,EAAA,OAAA,EAAA,MAAA,EAAA,IAAA,EAAA,UAAA,EAAA,SAAA,EAAA,OAAA,EAAA,WAAA,EAAA,MAAA,EAAA,UAAA,EAAA,OAAA,EAAA,OAAA,EAAA,MAAA,EAAA;;EAAA,OAAA,GAAU,OAAA,CAAQ,SAAR;;EACV,MAAA,GAAS,OAAO,CAAC,MAAR,CAAA;;EACT,QAAA,GAAW,OAAO,CAAC,MAAR,CAAA;;EACX,MAAA,GAAS,OAAA,CAAQ,QAAR;;EACT,IAAA,GAAO,OAAA,CAAQ,QAAR;;EACP,IAAA,GAAO,OAAA,CAAQ,eAAR,CAAwB,CAAC;;EAChC,GAAA,GAAM,OAAA,GAAU,OAAA,CAAQ,mBAAR,CAA4B,CAAC;;EAC7C,EAAA,GAAK,OAAA,CAAQ,aAAR;;EACL,IAAA,GAAK,OAAA,CAAQ,MAAR;;EACL,UAAA,GAAW,OAAA,CAAQ,QAAR;;EAKX,OAAA,CAAQ,yBAAR;;EAEA,CAAA,CAAC,iBAAD,CAAA,GAAsB,OAAA,CAAQ,kBAAR,CAAtB;;EAGA,OAAA,GAAU;;EACV,UAAA,GAAa;;EACb,SAAA,GAAY;;EACZ,WAAA,GAAc,QAAA,CAAC,GAAD,CAAA;WAAS,GAAG,CAAC,KAAJ,CAAU,GAAV;EAAT;;EAEd,MAAA,GAAS,QAAA,CAAC,MAAD,CAAA;WACP;MAAA,OAAA,EAAU,QAAA,CAAC,QAAD,CAAA;QACR,IAAG,OAAA,KAAW,IAAd;UAAwB,MAAM,IAAI,IAAJ,CAAS,oBAAT,EAA9B;;eACA,IAAA,CAAK,IAAL,EAAW,CAAC,KAAD,EAAQ,OAAA,GAAU,GAAV,GAAgB,MAAxB,CAAX,EACE,QAAA,CAAC,GAAD,EAAK,MAAL,EAAa,MAAb,CAAA;iBACE,QAAA,CAAS,GAAT,EAAc,CAAC,MAAD,EAAS,MAAT,CAAd;QADF,CADF;MAFQ,CAAV;MAOA,IAAA,EAAO,QAAA,CAAC,QAAD,CAAA;QACL,IAAG,OAAA,KAAW,IAAd;UAAwB,MAAM,IAAI,IAAJ,CAAS,oBAAT,EAA9B;;eACA,IAAA,CAAK,OAAL,EAAc,CAAC,IAAD,EAAO,UAAP,EAAmB,UAAA,GAAa,GAAb,GAAmB,MAAnB,GAA4B,GAA/C,EAAoD,OAAA,GAAU,GAAV,GAAgB,MAApE,CAAd,EACE,QAAA,CAAC,GAAD,EAAK,MAAL,EAAa,MAAb,CAAA;iBACE,QAAA,CAAS,GAAT,EAAc,CAAC,MAAD,EAAS,MAAT,CAAd;QADF,CADF;MAFK,CAPP;MAaA,OAAA,EAAS,QAAA,CAAC,QAAD,CAAA;QACP,IAAG,OAAA,KAAW,IAAd;UAAwB,MAAM,IAAI,IAAJ,CAAS,oBAAT,EAA9B;;eACA,IAAA,CAAK,OAAL,EAAc,CAAC,IAAD,EAAO,UAAP,EAAmB,OAAA,GAAU,GAAV,GAAgB,MAAhB,GAAyB,GAA5C,EAAiD,UAAA,GAAa,GAAb,GAAmB,MAApE,CAAd,EACE,QAAA,CAAC,GAAD,EAAK,MAAL,EAAa,MAAb,CAAA;iBACE,QAAA,CAAS,GAAT,EAAc,CAAC,MAAD,EAAS,MAAT,CAAd;QADF,CADF;MAFO;IAbT;EADO;;EAuBT,QAAA,GAAW,QAAA,CAAC,OAAD,EAAU,QAAV,CAAA;AACX,QAAA,OAAA,EAAA,IAAA,EAAA;IAAE,MAAA,GAAS,EAAE,CAAC,SAAH,CAAa,UAAA,GAAa,eAA1B;IACT,OAAA,GAAU,IAAI,CAAC,IAAL,CAAU,OAAV,EAAmB,QAAnB;IACV,GAAG,CAAC,IAAJ,CAAS;MAAC,WAAA,EAAY;IAAb,CAAT;IACA,IAAA,GACE;MAAA,QAAA,EAAW,QAAA,CAAA,CAAA;eACT,MAAA,CAAO,OAAP;MADS,CAAX;MAEA,IAAA,EAAO,QAAA,CAAA,CAAA;eACL;MADK;IAFP;AAIF,WAAO;EATE;;EAYX,MAAA,GAAS,QAAA,CAAC,GAAD,EAAM,GAAN,EAAW,IAAX,CAAA;AACT,QAAA,IAAA,EAAA;IAAI,GAAA,GAAM,OAAA,CAAQ,mBAAR,CAA4B,CAAC,aAA7B,CAA2C,GAA3C;IACN,WAAA,GAAc,QAAA,CAAC,GAAD,CAAA;MACZ,GAAG,CAAC,KAAJ,CAAU,GAAV;aACA,GAAG,CAAC,MAAJ,CAAW,GAAX,CAAe,CAAC,IAAhB,CAAqB;QAAC,GAAA,EAAK,GAAG,CAAC,OAAV;QAAmB,MAAA,EAAQ;MAA3B,CAArB;IAFY;IAId,IAAA,GAAO,MAAA,CAAO,MAAP;IACP,MAAA,GAAS,MAAA,CAAO,QAAP;IACT,MAAM,CAAC,QAAP,CACM;MAAA,OAAA,EAAS,CACP,IAAI,CAAC,IADE,EAEP,MAAM,CAAC,IAFA;IAAT,CADN,EAMI,UAAA,CAAW,GAAX,EAAe,GAAf,EAAmB,IAAnB,CANJ;EARK;;EAkBT,OAAA,GAAU,QAAA,CAAC,GAAD,EAAM,GAAN,EAAW,IAAX,CAAA;AACV,QAAA,IAAA,EAAA;IAAI,GAAA,GAAM,OAAA,CAAQ,mBAAR,CAA4B,CAAC,aAA7B,CAA2C,GAA3C;IACN,WAAA,GAAc,QAAA,CAAC,GAAD,CAAA;MACZ,GAAG,CAAC,KAAJ,CAAU,GAAV;aACA,GAAG,CAAC,MAAJ,CAAW,GAAX,CAAe,CAAC,IAAhB,CAAqB;QAAC,GAAA,EAAK,GAAG,CAAC,OAAV;QAAmB,MAAA,EAAQ;MAA3B,CAArB;IAFY;IAId,IAAA,GAAO,MAAA,CAAO,MAAP;IACP,MAAA,GAAS,MAAA,CAAO,QAAP;IACT,MAAM,CAAC,QAAP,CACM;MAAA,OAAA,EAAS,CAAC,IAAI,CAAC,OAAN,EACP,MAAM,CAAC,OADA;IAAT,CADN,EAII,WAAA,CAAY,GAAZ,EAAgB,GAAhB,EAAoB,IAApB,CAJJ;EARM;;EAiBV,UAAA,GAAa,QAAA,CAAC,GAAD,EAAK,GAAL,EAAS,IAAT,CAAA;WACX,QAAA,CAAE,GAAF,EAAO,OAAP,CAAA;MACE,IAAG,GAAH;eACE,WAAA,CAAY,IAAI,IAAJ,CAAS,GAAT,EAAc,0BAAd,CAAZ,EADF;OAAA,MAAA;eAGE,IAAA,CAAA,EAHF;;IADF;EADW;;EAQb,WAAA,GAAc,QAAA,CAAC,GAAD,EAAK,GAAL,EAAS,IAAT,CAAA;WACZ,QAAA,CAAE,GAAF,EAAO,OAAP,CAAA;MACE,IAAG,GAAH;eACE,WAAA,CAAY,IAAI,IAAJ,CAAS,GAAT,EAAc,mBAAd,CAAZ,EADF;OAAA,MAAA;eAGE,GAAG,CAAC,MAAJ,CAAW,IAAX,EAAiB;UACf,OAAA,EAAS;QADM,CAAjB,EAHF;;IADF;EADY;;EAUd,OAAA,GAAU,QAAA,CAAC,GAAD,EAAK,GAAL,EAAS,IAAT,CAAA;WACR,iBAAA,CAAkB,CAAA,CAAA,CAAG,OAAH,CAAA,MAAA,CAAlB,EAAqC,SAArC,EAAgD,WAAA,CAAY,GAAZ,EAAgB,GAAhB,EAAoB,IAApB,CAAhD;EADQ;;EAGV,WAAA,GAAc,QAAA,CAAC,GAAD,EAAK,GAAL,EAAS,IAAT,CAAA;WACZ,QAAA,CAAE,GAAF,EAAO,OAAP,CAAA;MACE,IAAG,GAAH;eACE,WAAA,CAAY,IAAI,IAAJ,CAAS,GAAT,EAAc,gCAAd,CAAZ,EADF;OAAA,MAAA;QAGE,OAAA,CAAQ,iBAAR,CAA0B,CAAC,cAA3B,CAAA;eACA,GAAG,CAAC,MAAJ,CAAW,IAAX,EAAiB;UACf,OAAA,EAAS;QADM,CAAjB,EAJF;;IADF;EADY;;EAUd,SAAA,GAAY,QAAA,CAAC,GAAD,EAAM,GAAN,EAAW,IAAX,CAAA;AACZ,QAAA,IAAA,EAAA;IAAE,GAAA,GAAM,OAAA,CAAQ,mBAAR,CAA4B,CAAC,aAA7B,CAA2C,GAA3C;IACN,WAAA,GAAc,QAAA,CAAC,GAAD,CAAA;MACZ,GAAG,CAAC,KAAJ,CAAU,GAAV;aACA,GAAG,CAAC,MAAJ,CAAW,GAAX,CAAe,CAAC,IAAhB,CAAqB;QAAC,GAAA,EAAK,GAAG,CAAC,OAAV;QAAmB,MAAA,EAAQ;MAA3B,CAArB;IAFY;IAId,GAAG,CAAC,IAAJ,GAAW,GAAG,CAAC,MAAM,CAAC,CAAD;IACrB,IAAA,GAAO,QAAA,CAAS,UAAA,GAAa,OAAtB,EAA+B,GAAG,CAAC,IAAnC;IACP,GAAG,CAAC,IAAJ,GAAW,IAAI,CAAC,IAAL,CAAA;IACX,QAAA,GAAW,IAAI,CAAC,QAAL,CAAA;IACX,GAAG,CAAC,IAAJ,CAAS,iCAAT,EAA2C,GAAG,CAAC,IAA/C,EAAqD,QAArD;IAEA,IAAG,QAAH;aAAiB,IAAA,CAAA,EAAjB;KAAA,MAAA;aACK,GAAG,CAAC,MAAJ,CAAW,GAAX,CAAe,CAAC,IAAhB,CAAqB,IAAA,CAAK,qBAAL,EAA4B,GAAG,CAAC,IAAhC,CAArB,EADL;;EAZU;;EAgBZ,OAAA,GAAU,UAAU,CAAC,WAAX,CACR;IAAA,WAAA,EAAc,QAAA,CAAC,GAAD,EAAM,IAAN,EAAY,EAAZ,CAAA;AAChB,UAAA;MAAI,GAAA,GAAM,IAAI,CAAC,OAAL,CAAa,GAAG,CAAC,IAAjB;aACN,EAAE,CAAC,KAAH,CAAS,GAAT,EAAc,QAAA,CAAC,GAAD,CAAA;eAAS,EAAA,CAAG,GAAH,EAAQ,GAAR;MAAT,CAAd;IAFY,CAAd;IAGA,QAAA,EAAW,QAAA,CAAC,GAAD,EAAM,IAAN,EAAY,EAAZ,CAAA;aACT,EAAA,CAAG,IAAH,EAAS,IAAI,CAAC,QAAL,CAAc,GAAG,CAAC,IAAlB,CAAT;IADS;EAHX,CADQ;;EAQV,MAAA,GAAS,UAAA,CAAW;IAAE,OAAA,EAAS;EAAX,CAAX;;EAGT,UAAA,GAAa,QAAA,CAAC,GAAD,EAAM,GAAN,EAAW,IAAX,CAAA;IACX,GAAG,CAAC,MAAJ,CAAW,GAAX,CAAe,CAAC,IAAhB,CAAqB,IAArB;EADW;;EAMb,MAAA,GAAQ,QAAA,CAAC,CAAD,EAAG,MAAH,CAAA,EAAA;;;IAGN,OAAA,GAAU,MAAM,CAAC;IACjB,UAAA,GAAa,MAAM,CAAC;IACpB,SAAA,GAAY,MAAM,CAAC;IACnB,IAAG,OAAA,KAAW,IAAX,IAAmB,UAAA,KAAc,IAApC;MAA8C,MAAM,IAAI,IAAJ,CAAS,oBAAT,EAApD;KALF;;IAOE,MAAM,CAAC,IAAP,CAAa,SAAb,EAAwB,MAAxB,EAAgC,OAAhC;IACA,MAAM,CAAC,IAAP,CAAa,UAAb,EAAyB,OAAzB;WACA,MAAM,CAAC,IAAP,CAAY,aAAZ,EAA2B,SAA3B,EAAsC,MAAM,CAAC,MAAP,CAAc,MAAd,CAAtC,EAA6D,UAA7D;EAVM;;EAcR,OAAA,CAAQ,iBAAR,CAA0B,CAAC,UAA3B,CAAsC,MAAtC;;EAEA,MAAM,CAAC,OAAP,GAAiB;AA9KjB",
  "sourcesContent": [
    "express = require('express')\nrouter = express.Router()\neditFile = express.Router()\nvasync = require('vasync')\nVErr = require('verror')\nexec = require('child_process').execFile;\nlog = mainLog = require('../helpers/logger').mainLogger\nfs = require('file-system');\npath=require('path')\nformParser=require('multer');\n\n\n\n\nrequire('../helpers/marked.utils')\n\n{createGlobalCache} = require '../helpers/cache'\n \n\nprodDir = null\nstagingDir = null\nentryFile = null\nrenderError = (err) -> log.error(err)  \n\nfolder = (subDir) ->\n  cleanup : (callback)-> \n    if prodDir == null then throw new VErr(\"config not loaded.\")\n    exec('rm', ['-rf', prodDir + '/' + subDir ], \n      (err,stdout, stderr) ->\n        callback(err, {stdout, stderr})\n    )\n  ,\n  sync : (callback) ->\n    if prodDir == null then throw new VErr(\"config not loaded.\")\n    exec('rsync', ['-a', '--delete', stagingDir + '/' + subDir + '/', prodDir + '/' + subDir ], \n      (err,stdout, stderr) ->\n        callback(err, {stdout, stderr})\n    )\n  unstage: (callback) ->\n    if prodDir == null then throw new VErr(\"config not loaded.\")\n    exec('rsync', ['-a', '--delete', prodDir + '/' + subDir + '/', stagingDir + '/' + subDir ], \n      (err,stdout, stderr) ->\n        callback(err, {stdout, stderr})\n    )\n\n\n\nfilepath = (rootDir, filepath) ->\n  filter = fs.fileMatch(stagingDir + '/data/**/*.md')\n  absPath = path.join(rootDir, filepath)\n  log.info({\"full path\":absPath})\n  file = \n    mayWrite : ()-> \n      filter(absPath)\n    full : ()->\n      absPath\n  return file\n\n\ncommit = (req, res, next) ->\n    log = require('../helpers/logger').requestLogger(req)\n    renderError = (err) -> \n      log.error err      \n      res.status(500).json {txt: err.message, status: 'fail'}\n\n    data = folder('data')\n    images = folder('images')\n    vasync.parallel(\n          'funcs': [\n            data.sync,\n            images.sync\n          ]\n        ,\n        doneCommit(req,res,next)\n    )\n    return\n\nunstage = (req, res, next) ->\n    log = require('../helpers/logger').requestLogger(req)\n    renderError = (err) -> \n      log.error err\n      res.status(500).json {txt: err.message, status: 'fail'}\n\n    data = folder('data')\n    images = folder('images')\n    vasync.parallel(\n          'funcs': [data.unstage,\n            images.unstage\n          ],\n        doneUnstage(req,res,next)\n    )\n    return\n  \n\ndoneCommit = (req,res,next) -> \n  ( err, results ) ->\n    if err\n      renderError new VErr(err, \"Failed to commit changes\")\n    else\n      next()\n\n\ndoneUnstage = (req,res,next) -> \n  ( err, results ) ->\n    if err\n      renderError new VErr(err, \"Failed to unstage\")\n    else\n      res.render('ok', { \n        message: \"Data and images of the staging area have been reset to match production website\"\n      })\n  \n\ndoCache = (req,res,next) ->\n  createGlobalCache(\"#{prodDir}/data/\",entryFile, doneCaching(req,res,next))\n  \ndoneCaching = (req,res,next) -> \n  ( err, results ) ->\n    if err\n      renderError new VErr(err, \"Failed to cache commited data \")\n    else\n      require('../helpers/init').setCompileDate()\n      res.render('ok', { \n        message: \"Data and images of the staging area have been commited and cached.\"\n      })\n\npreUpload = (req, res, next) ->\n  log = require('../helpers/logger').requestLogger(req)\n  renderError = (err) -> \n    log.error err\n    res.status(400).json {txt: err.message, status: 'fail'}\n\n  req.dest = req.params[0]\n  dest = filepath(stagingDir + '/data', req.dest )\n  req.dest = dest.full()\n  mayWrite = dest.mayWrite()\n  log.info(\"requested edit: %s maywrite: %s\",req.dest, mayWrite)\n\n  if mayWrite then next()\n  else res.status(403).send VErr(\"May not write to %s\", req.dest)\n\n  \nstorage = formParser.diskStorage\n  destination:  (req, file, cb) ->\n    dir = path.dirname(req.dest)\n    fs.mkdir(dir, (err) -> cb(err, dir))\n  filename:  (req, file, cb) ->\n    cb(null, path.basename(req.dest))\n\n\nupload = formParser({ storage: storage })\n\n\npostUpload = (req, res, next) ->\n  res.status(200).send(\"ok\")\n  return\n\n\n\nonInit= (_,config) ->\n  #todo: add a middleware in app.js that adds the config object to req so that it is accessible from the callbacks without hassle\n  # for now hack it with globals:\n  prodDir = config.prodPublicDir\n  stagingDir = config.stagingPublicDir\n  entryFile = config.entryFile\n  if prodDir == null || stagingDir == null then throw new VErr(\"config not loaded.\")\n  # commit changes in the staging area to the production website: \n  router.post( '/commit', commit, doCache)\n  router.post( '/unstage', unstage)\n  router.post('/editfile/*', preUpload, upload.single(\"file\"), postUpload)\n\n\n\nrequire('../helpers/init').readConfig(onInit)\n\nmodule.exports = router"
  ]
}