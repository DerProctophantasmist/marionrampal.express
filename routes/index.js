// Generated by CoffeeScript 2.5.1
(function() {
  var VErr, cache, express, getNbrOfSections, globalCache, hbs, httpContext, language, log, onInit, router, sections;

  express = require('express');

  router = express.Router();

  log = require('../helpers/logger').mainLogger;

  VErr = require('verror');

  hbs = require('hbs');

  httpContext = require('express-http-context');

  ({globalCache, getNbrOfSections} = require('../helpers/cache'));

  sections = require('../helpers/sections');

  hbs.registerHelper('description', function() {
    var page, ref, ref1, ref2, ref3;
    page = (ref = this.page) != null ? ref : (ref1 = sections.head) != null ? ref1.id : void 0;
    return (ref2 = sections.data[page]) != null ? (ref3 = ref2.description) != null ? ref3[this.curLang] : void 0 : void 0;
  });

  hbs.registerHelper('websiteTitle', function() {
    var page, ref, ref1, ref2, ref3, ref4, title;
    page = (ref = this.page) != null ? ref : (ref1 = sections.head) != null ? ref1.id : void 0;
    title = (ref2 = (ref3 = sections.data[page]) != null ? ref3.title : void 0) != null ? ref2 : (ref4 = sections.data[page]) != null ? ref4.name : void 0;
    return title != null ? title[this.curLang] : void 0;
  });

  hbs.registerHelper('includeRoot', function(filename) {
    log.info({
      curLang: this.curLang,
      httpContextLang: httpContext.get('curLang')
    });
    if (this.allowEdit === "false") {
      if (this.cache) {
        return new hbs.SafeString(cache);
      }
      return new hbs.SafeString(`<marked compile="true" filename="'${filename}'"></marked>`);
    }
    return new hbs.SafeString(`<marked compile="true" filename="'${filename}'"  editor-button-style="position:absolute;top:2em;left:0;color:black;z-index:1000;"></marked>`);
  });

  language = function(req, res, next) {
    var cookieLang, fbLang, forceLang, ref, ref1, ref2;
    log = require('../helpers/logger').requestLogger(req);
    fbLang = req.get('X-Facebook-Locale');
    if (cookieLang = req.cookies["marionrampal.locale"]) {
      cookieLang = cookieLang.substring(0, 2);
      log.info({
        cookieLang: cookieLang
      });
    }
    res.locals.prefLang = (ref = (ref1 = cookieLang != null ? cookieLang : req.acceptsLanguages('fr', 'en')) != null ? ref1 : fbLang) != null ? ref : 'en';
    forceLang = req.query.forceLang;
    if (forceLang === "") {
      forceLang = null;
    }
    res.locals.forceLang = forceLang;
    res.locals.curLang = (ref2 = forceLang != null ? forceLang : fbLang) != null ? ref2 : res.locals.prefLang;
    httpContext.set('curLang', res.locals.curLang);
    return next();
  };

  cache = function(req, res, next) {
    return next();
  };

  onInit = function(_, config) {
    log.info({config}, "configuration object");
    // GET home page. 
    return router.get('/', httpContext.middleware, language, cache, function(req, res, next) {
      var allowEdit, basePath, nbrOfSections, page;
      log = require('../helpers/logger').requestLogger(req);
      cache = null;
      nbrOfSections = 0;
      basePath = req.query.path;
      basePath = (basePath != null ? basePath : '') + '/';
      allowEdit = (basePath === '/staging/' ? 'true' : 'false');
      if (allowEdit === "false") {
        cache = globalCache[this.curLang];
        if (!cache) {
          log.error(new VErr(), "content was not cached");
        }
        nbrOfSections = getNbrOfSections();
      }
      log.info({
        'query path': basePath
      });
      page = req.query.page;
      if (page === "") {
        page = null;
      }
      res.render('index', {
        allowEdit,
        basePath,
        page,
        bannerTitle: config.bannerTitle,
        mainPage: config.mainPage,
        compileDate: config.compileDate,
        cache,
        nbrOfSections
      });
    });
  };

  require('../helpers/init').readConfig(onInit);

  module.exports = router;

}).call(this);

//# sourceMappingURL=index.js.map
