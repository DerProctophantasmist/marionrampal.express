// Generated by CoffeeScript 1.12.6
(function() {
  var authFile, cors, corsOptions, express, fs, nodemailer, path, router, validator, xoauth2;

  express = require('express');

  nodemailer = require('nodemailer');

  xoauth2 = require('xoauth2');

  fs = require('fs');

  path = require('path');

  cors = require('cors');

  validator = require('validator');

  corsOptions = {
    origin: /http:\/\/([^.]+\.)*marionrampal.(com|local)/,
    optionsSuccessStatus: 200
  };

  authFile = path.join(process.env.MR_EXPRESS_ROOT, 'keys/mailer.marionrampal.com.json');

  router = express.Router();

  router.options('/', cors(corsOptions));

  fs.readFile(authFile, function(err, data) {
    var auth, generator;
    if (err) {
      console.log("Could not read auth data from " + authFile + ": " + err.code);
      throw err;
    }
    auth = JSON.parse(data + "");
    generator = xoauth2.createXOAuth2Generator(auth);
    generator.on('token', function(token) {
      console.log('New token for %s: %s', token.user, token.accessToken);
      auth.accessToken = token.accessToken;
      return fs.writeFile(authFile, JSON.stringify(auth), function(err) {
        if (err) {
          return console.log("Could not save auth data after update: " + err.code);
        }
      });
    });
    console.log(JSON.stringify(generator));
    return router.post('/', cors(corsOptions), function(req, res, next) {
      var content, emailFrom, mailOpts, smtpTrans, subject;
      smtpTrans = nodemailer.createTransport({
        service: 'gmail',
        auth: {
          xoauth2: generator
        }
      });
      emailFrom = req.body.emailFrom || "";
      subject = req.body.subject || "";
      content = req.body.content || "";
      if (!validator.isEmail(emailFrom)) {
        return res.status(400).json({
          txt: 'Email ' + emailFrom + ' invalide',
          status: 'fail'
        });
      }
      mailOpts = {
        from: emailFrom,
        to: 'marionrampal@hotmail.com',
        subject: subject,
        "reply-to": emailFrom,
        text: "de: " + emailFrom + "\n\n\n" + content
      };
      return smtpTrans.sendMail(mailOpts, function(error, response) {
        if (error) {
          return res.status(400).json({
            txt: 'error: ' + JSON.stringify(error),
            status: 'fail'
          });
        } else {
          return res.json({
            status: 'success',
            txt: 'Email envoyé avec succès'
          });
        }
      });
    });
  });

  module.exports = router;

}).call(this);

//# sourceMappingURL=contact.js.map
