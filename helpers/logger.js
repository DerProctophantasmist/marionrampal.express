// Generated by CoffeeScript 2.6.1
(function() {
  var accessLogStream, bunyan, logResponse, loggerInstance, path, requestLogger, rfs;

  bunyan = require('bunyan');

  rfs = require('rotating-file-stream');

  path = require('path');

  
  // create a rotating write stream
  accessLogStream = rfs.createStream('access.log', {
    interval: '3d', // rotate every 3 days
    maxFiles: 3,
    path: path.join(process.env.EXPRESS_ROOT, 'log')
  });

  loggerInstance = bunyan.createLogger({
    name: 'main Logger',
    serializers: {
      req: require('bunyan-express-serializer'),
      res: bunyan.stdSerializers.res,
      err: bunyan.stdSerializers.err
    },
    streams: [
      {
        stream: accessLogStream,
        level: 'info'
      },
      {
        stream: process.stdout,
        level: 'info'
      }
    ]
  });

  logResponse = function(id, body, statusCode) {
    var log;
    log = loggerInstance.child({
      id: id,
      body: body,
      statusCode: statusCode
    }, true);
    return log.info('response');
  };

  requestLogger = function(req) {
    if (req === null) {
      loggerInstance.error('logger: request not set when initializing logger');
    }
    if (req.id === null) {
      loggerInstance.error('logger: id not set on request');
    }
    return loggerInstance.child({
      id: req.id
    }, true);
  };

  module.exports = {
    mainLogger: loggerInstance,
    logResponse,
    requestLogger
  };

}).call(this);

//# sourceMappingURL=logger.js.map
