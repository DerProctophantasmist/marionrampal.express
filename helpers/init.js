// Generated by CoffeeScript 2.5.1
(function() {
  var config, dataFile, e, err, fs, log, path, readConfig, vErr;

  fs = require('fs');

  path = require('path');

  log = require('../helpers/logger').mainLogger;

  config = null;

  vErr = require("verror");

  //the data file is actually a js file, richer syntax, the dynamic path means it won't be browserified (if we use that to bundle)
  dataFile = path.join(process.env.EXPRESS_ROOT, 'data/main');

  try {
    // configCallbacks = []
    config = require(dataFile);
  } catch (error) {
    e = error;
    err = new vErr(e, "Could not load config file: " + dataFile);
    log.error(err);
    throw err;
  }

  // fs.readFile dataFile, (err, data) ->
  //   if (err) 
  //     log.info err, "Could not read config from %s: ", dataFile 
  //     throw err
  //   config = JSON.parse(data + "")
  //   log.info { config }, "Loaded configuration"

  //   for callback in configCallbacks
  //     callback(err, config)

  // readConfig = (callback) ->
  //     configCallbacks.push callback
  //     return
  readConfig = function(callback) {
    return callback(null, config);
  };

  module.exports = {readConfig}; // takes one arg: a callback that witl receive the config object as argument when initialization is done

}).call(this);

//# sourceMappingURL=init.js.map
